name: Build mitmproxy for Android ARM64

on:
  workflow_dispatch: # Только ручной запуск

jobs:
  build-android-arm64:
    runs-on: ubuntu-latest

    steps:
      # 1. Клонируем репозиторий
      - name: Checkout repository
        uses: actions/checkout@v4

      #主根 NDK
      - name: Set up Android NDK
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r25c

      # 2. Устанавливаем Python и необходимые инструменты
      - name: Install Python and tools
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip python3-dev build-essential patchelf
          pip3 install setuptools wheel

      # 3. Устанавливаем Nuitka
      - name: Install Nuitka
        run: |
          pip3 install nuitka

      # 4. Кросс-компиляция mitmproxy для Android ARM64
      - name: Build mitmproxy for Android ARM64
        env:
          ANDROID_NDK_HOME: ${{ github.workspace }}/android-ndk-r25c
        run: |
          # Настраиваем пути для кросс-компиляции под Android ARM64
          export PATH=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH
          export CC=aarch64-linux-android33-clang
          export CXX=aarch64-linux-android33-clang++
          export LD=aarch64-linux-android-ld
          export AR=aarch64-linux-android-ar
          export RANLIB=aarch64-linux-android-ranlib
          export CFLAGS="-I$ANDROID_NDK_HOME/sysroot/usr/include --sysroot=$ANDROID_NDK_HOME/sysroot -fPIC"
          export LDFLAGS="--sysroot=$ANDROID_NDK_HOME/sysroot"

          # Устанавливаем зависимости mitmproxy для ARM64
          pip3 install . --platform manylinux2014_aarch64 --only-binary=:all: --target ./python-deps

          # Компилируем mitmproxy в бинарник
          python3 -m nuitka \
            --standalone \
            --onefile \
            --assume-yes-for-downloads \
            --output-dir=dist \
            --clang \
            --lto=yes \
            --static-libpython \
            -I./python-deps/include \
            -L./python-deps/lib \
            mitmproxy/main.py

      # 5. Переименовываем бинарник
      - name: Rename binary
        run: |
          mv dist/main.bin mitmproxy-android-arm64

      # 6. Сохраняем бинарник как артефакт
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: mitmproxy-android-arm64
          path: mitmproxy-android-arm64

      # 7. (Опционально) Тестируем через ADB
      - name: Test binary via ADB
        run: |
          sudo apt-get install -y android-tools-adb
          adb devices
          adb push mitmproxy-android-arm64 /data/local/tmp/mitmproxy
          adb shell chmod +x /data/local/tmp/mitmproxy
          adb shell /data/local/tmp/mitmproxy --version
